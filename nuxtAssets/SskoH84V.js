var $=Object.defineProperty;var z=(s,t,i)=>t in s?$(s,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):s[t]=i;var o=(s,t,i)=>z(s,typeof t!="symbol"?t+"":t,i);import{a4 as N,ao as c,V as d,a7 as E,Y as y,Z as v,M as m,ar as O,K as p,an as R,am as D,W as F,U as T}from"./dVWTdz__.js";import{T as P}from"./CcTuiQ7E.js";function k(s){return Math.floor(s/6)+"."+s%6}async function U(s,t){let i=0,e=0,n=0,a=[];for(let r of t.balls_action)if(r&&(i+=r.total_runs,r.legal?e++:i++,r.wicket!=y.NONE)){n++;let h=(await s.select({playerID:c.playerID}).from(c).where(d(c.outOnBall,r.id)))[0].playerID;a.push({runs:i,wickets:n,balls:e,playerID:h})}return a}async function A(s,t){var f,w,S;let i={id:-1,runs:0,balls:0},e={id:-1,runs:0,balls:0},n=0,a=0,r=()=>{let _=i;i=e,e=_},h=[];for(let _=0;_<t.actions.length;_++){if(((f=t.actions[_])==null?void 0:f.type)==N.NEW_BATTER&&(i.id==-1?i.id=(await s.select({playerID:c.playerID}).from(c).where(d(c.id,t.actions[_].relatedID)))[0].playerID:e.id=(await s.select({playerID:c.playerID}).from(c).where(d(c.id,t.actions[_].relatedID)))[0].playerID),((w=t.actions[_])==null?void 0:w.type)==N.NEW_BALL){let l=t.balls_action[_];n+=l.runs_by_running+l.boundary,l.legal?a++:n++,l.wide||i.balls++,l.hit_by==v.BAT&&(i.runs+=l.runs_by_running+l.boundary),l.wicket!=y.NONE&&(h.push({runs:structuredClone(n),balls:structuredClone(a),player1:structuredClone(i),player2:structuredClone(e)}),i.runs=0,i.balls=0,e.runs=0,e.balls=0,n=0,a=0),[y.NONE,y.RUN_OUT_NON_STRIKER_ON_STRIKER_END,y.RUN_OUT_NON_STRIKER_ON_NON_STRIKER_END].includes(l.wicket)||(i={id:-1,runs:0,balls:0}),(l.wicket==y.RUN_OUT_NON_STRIKER_ON_STRIKER_END||l.wicket==y.RUN_OUT_NON_STRIKER_ON_NON_STRIKER_END)&&(e={id:-1,runs:0,balls:0}),l.runs_by_running%2==1&&r(),[y.CAUGHT_AND_BATSMEN_CROSSED,y.RUN_OUT_STRIKER_ON_NON_STRIKER_END,y.RUN_OUT_NON_STRIKER_ON_STRIKER_END].includes(l.wicket)&&r()}((S=t.actions[_])==null?void 0:S.type)==N.END_OF_OVER&&r()}return i.id!=-1&&e.id!=-1&&h.push({runs:n,balls:a,player1:structuredClone(i),player2:structuredClone(e)}),h}async function G(s,t){var w,S,_,l,g,b;let i=[],e=-1,n=-1,a=-1,r=-1,h={bowler:-1,batters:[],balls:[]},f=[];for(let u=0;u<t.actions.length;u++){if(((w=t.actions[u])==null?void 0:w.type)==N.NEW_BATTER){let I=(await s.select({playerID:c.playerID,outOnBall:c.outOnBall}).from(c).where(d(c.id,t.actions[u].relatedID)))[0];e==-1?(e=I==null?void 0:I.playerID,a=I==null?void 0:I.outOnBall):(n=I==null?void 0:I.playerID,r=I==null?void 0:I.outOnBall),h.batters.push(I==null?void 0:I.playerID)}if(((S=t.actions[u])==null?void 0:S.type)==N.NEW_BOWLER&&(h.bowler=(await s.select({playerID:E.playerID}).from(E).where(d(E.id,t.actions[u].relatedID)).limit(1))[0].playerID),((_=t.actions[u])==null?void 0:_.type)==N.NEW_BALL&&(f.push(t.balls_action[u]),((l=t.balls_action[u])==null?void 0:l.id)==a&&(e=-1,a=-1),((g=t.balls_action[u])==null?void 0:g.id)==r&&(n=-1,r=-1)),((b=t.actions[u])==null?void 0:b.type)==N.END_OF_OVER){i.push(structuredClone(h));for(let I of f)i[i.length-1].balls.push(I);f=[],h={bowler:-1,batters:[],balls:[]},e!=-1&&h.batters.push(e),n!=-1&&h.batters.push(n)}}if(f.length!=0){i.push(structuredClone(h));for(let u of f)i[i.length-1].balls.push(u)}return i}var x=(s=>(s[s.NOT_STARTED=0]="NOT_STARTED",s[s.FIRST_INNING=1]="FIRST_INNING",s[s.BREAK=2]="BREAK",s[s.SECOND_INNING=3]="SECOND_INNING",s[s.COMPLETED=4]="COMPLETED",s))(x||{});class B{constructor(t,i,e,n,a,r,h){o(this,"db");o(this,"id");o(this,"team1ID");o(this,"team2ID");o(this,"team1");o(this,"team2");o(this,"max_balls");o(this,"team1PlayerIDs");o(this,"team2PlayerIDs");o(this,"team1Players");o(this,"team2Players");o(this,"tossWonBy1");o(this,"knockout");o(this,"id_FirstInning",-1);o(this,"id_SecondInning",-1);o(this,"FirstInning");o(this,"SecondInning");this.team1ID=t,this.team2ID=i,this.max_balls=e,this.team1PlayerIDs=n,this.team2PlayerIDs=a,this.tossWonBy1=r,this.knockout=h}get Status(){return this.FirstInning==null?0:this.FirstInning.required_action()!=N.END_OF_INNING?1:this.SecondInning==null?2:this.SecondInning.required_action()!=N.END_OF_INNING?3:4}static from_drizzle(t){let i=new B(t.team1ID,t.team2ID,t.max_balls,t.team1PlayerIDs,t.team2PlayerIDs,t.tossWonBy1,t.knockout);return i.id=t.id,i.id_FirstInning=t.id_FirstInning,i.id_SecondInning=t.id_SecondInning,i}async save(t){if(this.id==null){let i=await t.insert(m).values({team1ID:this.team1ID,team2ID:this.team2ID,max_balls:this.max_balls,team1PlayerIDs:this.team1PlayerIDs,team2PlayerIDs:this.team2PlayerIDs,tossWonBy1:this.tossWonBy1,knockout:this.knockout}).returning();if(i.length==0)throw O.update_db_error;this.id=i[0].id}else await t.update(m).set({team1ID:this.team1ID,team2ID:this.team2ID,max_balls:this.max_balls,team1PlayerIDs:this.team1PlayerIDs,team2PlayerIDs:this.team2PlayerIDs,tossWonBy1:this.tossWonBy1,knockout:this.knockout,id_FirstInning:this.id_FirstInning,id_SecondInning:this.id_SecondInning}).where(d(m.id,this.id))}async load_data(t){this.db=t,this.team1=P.from_drizzle((await this.db.select().from(p).where(d(p.id,this.team1ID)))[0]),this.team2=P.from_drizzle((await this.db.select().from(p).where(d(p.id,this.team2ID)))[0]),this.id_FirstInning!=-1?(this.FirstInning=R.from_drizzle((await this.db.select().from(D).where(d(D.id,this.id_FirstInning)))[0]),await this.FirstInning.load_data(this.db)):this.FirstInning=void 0,this.id_SecondInning!=-1?(this.SecondInning=R.from_drizzle((await this.db.select().from(D).where(d(D.id,this.id_SecondInning)))[0]),await this.SecondInning.load_data(this.db)):this.SecondInning=void 0,this.team1Players=[];for(let i=0;i<this.team1PlayerIDs.length;i++){let e=this.team1PlayerIDs[i];this.team1Players.push(F.from_drizzle((await this.db.select().from(T).where(d(T.id,e)))[0]))}this.team2Players=[];for(let i=0;i<this.team2PlayerIDs.length;i++){let e=this.team2PlayerIDs[i];this.team2Players.push(F.from_drizzle((await this.db.select().from(T).where(d(T.id,e)))[0]))}}player_by_id(t){var e,n;let i=(e=this.team1Players)==null?void 0:e.find(a=>a.id==t);return i||((n=this.team2Players)==null?void 0:n.find(a=>a.id==t))}get current_inning(){if(this.Status==1)return this.FirstInning;if(this.Status==3)return this.SecondInning}get latest_inning(){return this.SecondInning?this.SecondInning:this.FirstInning}async push(){var t,i;if(this.Status==0){this.id_FirstInning=(await this.db.insert(D).values({battingTeamID:this.team1ID,bowlingTeamID:this.team2ID,max_balls:this.max_balls,id_YetToBat:this.team1PlayerIDs,id_YetToBowl:this.team2PlayerIDs}).returning())[0].id,await((t=this.db)==null?void 0:t.update(m).set({id_FirstInning:this.id_FirstInning}).where(d(m.id,this.id))),await this.load_data(this.db);return}if(this.Status==2){this.id_SecondInning=(await this.db.insert(D).values({battingTeamID:this.team2ID,bowlingTeamID:this.team1ID,max_balls:this.max_balls,target:((i=this.FirstInning)==null?void 0:i.runs)+1,id_YetToBat:this.team2PlayerIDs,id_YetToBowl:this.team1PlayerIDs}).returning())[0].id,await this.db.update(m).set({id_SecondInning:this.id_SecondInning}).where(d(m.id,this.id)),await this.load_data(this.db);return}throw O.match_error_invalid_status}async undo(){var t,i,e,n,a,r;if(this.Status==0)throw O.invalid_action;if(this.Status==1||this.Status==2){if(((t=this.FirstInning)==null?void 0:t.actions.length)==0){await this.db.delete(D).where(d(D.id,this.id_FirstInning)),await((i=this.db)==null?void 0:i.update(m).set({id_FirstInning:-1}).where(d(m.id,this.id))),this.id_FirstInning=-1,await this.load_data(this.db);return}await((e=this.FirstInning)==null?void 0:e.undo_last_action());return}if(((n=this.SecondInning)==null?void 0:n.actions.length)==0){await((a=this.db)==null?void 0:a.delete(D).where(d(D.id,this.id_SecondInning))),await this.db.update(m).set({id_SecondInning:-1}).where(d(m.id,this.id)),this.id_SecondInning=-1,await this.load_data(this.db);return}await((r=this.SecondInning)==null?void 0:r.undo_last_action())}get StatusMessage(){var t,i,e,n,a,r,h,f,w,S,_,l;if(this.Status==0||this.Status==1)return this.tossWonBy1?`${(t=this.team1)==null?void 0:t.name} won the toss and elected to bat first`:`${(i=this.team2)==null?void 0:i.name} won the toss and elected to bowl first`;if(this.Status==2)return this.max_balls<30?`${(e=this.team2)==null?void 0:e.name} needs ${((n=this.FirstInning)==null?void 0:n.runs)+1} run${((a=this.FirstInning)==null?void 0:a.runs)+1==1?"":"s"} in ${this.max_balls} ball${this.max_balls==1?"":"s"}`:`${(r=this.team2)==null?void 0:r.name} needs ${((h=this.FirstInning)==null?void 0:h.runs)+1} run${((f=this.FirstInning)==null?void 0:f.runs)+1==1?"":"s"} in ${k(this.max_balls)} over${this.max_balls==6?"":"s"}`;if(this.Status==3){let g=this.SecondInning.target-this.SecondInning.runs,b=this.SecondInning.max_balls-this.SecondInning.balls;return b<30?`${(w=this.team2)==null?void 0:w.name} needs ${g} run${g==1?"":"s"} in ${b} ball${b==1?"":"s"}`:`${(S=this.team2)==null?void 0:S.name} needs ${g} run${g==1?"":"s"} in ${k(b)} over${b==6?"":"s"}`}else{let g=this.SecondInning.target-this.SecondInning.runs-1,b=this.SecondInning.wickets_left;return g==0?"Match tied":g<0?`${(_=this.team2)==null?void 0:_.name} won by ${b} wicket${b==1?"":"s"}`:`${(l=this.team1)==null?void 0:l.name} won by ${g} run${g==1?"":"s"}`}}get Winner(){if(this.Status==4&&this.SecondInning.runs!=this.SecondInning.target-1)return this.SecondInning.runs>=this.SecondInning.target?this.team2ID:this.team1ID}async delete_self(){var t;this.SecondInning&&await this.SecondInning.delete_self(),this.FirstInning&&await this.FirstInning.delete_self(),await((t=this.db)==null?void 0:t.delete(m).where(d(m.id,this.id)))}}export{B as M,x as a,k as b,A as c,G as e,U as f};
